<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_service_1_1_services_1_1_event_service_impl" kind="class" language="C#" prot="public">
    <compoundname>Service::Services::EventServiceImpl</compoundname>
    <basecompoundref refid="class_event_service_1_1_event_service_base" prot="public" virt="non-virtual">EventService.EventServiceBase</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_service_1_1_services_1_1_event_service_impl_1a5d8916fb6f2cb56226119c8f298c4c66" prot="private" static="no" mutable="no">
        <type>readonly ILogger&lt; <ref refid="class_service_1_1_services_1_1_event_service_impl" kindref="compound">EventServiceImpl</ref> &gt;</type>
        <definition>readonly ILogger&lt;EventServiceImpl&gt; Service.Services.EventServiceImpl._logger</definition>
        <argsstring></argsstring>
        <name>_logger</name>
        <qualifiedname>Service.Services.EventServiceImpl._logger</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="17" column="34" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_service_1_1_services_1_1_event_service_impl_1a54a5218d1d028a7f8b3caeeac2d9e514" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_data_1_1_interfaces_1_1_i_event_repository" kindref="compound">IEventRepository</ref></type>
        <definition>readonly IEventRepository Service.Services.EventServiceImpl._eventRepository</definition>
        <argsstring></argsstring>
        <name>_eventRepository</name>
        <qualifiedname>Service.Services.EventServiceImpl._eventRepository</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="18" column="43" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_service_1_1_services_1_1_event_service_impl_1a80f796ce90bf41b445d0f7f93e3b1384" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_data_1_1_interfaces_1_1_i_booking_repository" kindref="compound">IBookingRepository</ref></type>
        <definition>readonly IBookingRepository Service.Services.EventServiceImpl._bookingRepository</definition>
        <argsstring></argsstring>
        <name>_bookingRepository</name>
        <qualifiedname>Service.Services.EventServiceImpl._bookingRepository</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="19" column="45" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1afcf325584b268c2332c93596d77e4c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Service.Services.EventServiceImpl.EventServiceImpl</definition>
        <argsstring>(ILogger&lt; EventServiceImpl &gt; logger, IEventRepository eventRepository, IBookingRepository bookingRepository)</argsstring>
        <name>EventServiceImpl</name>
        <qualifiedname>Service.Services.EventServiceImpl.EventServiceImpl</qualifiedname>
        <param>
          <type>ILogger&lt; <ref refid="class_service_1_1_services_1_1_event_service_impl" kindref="compound">EventServiceImpl</ref> &gt;</type>
          <declname>logger</declname>
        </param>
        <param>
          <type><ref refid="interface_data_1_1_interfaces_1_1_i_event_repository" kindref="compound">IEventRepository</ref></type>
          <declname>eventRepository</declname>
        </param>
        <param>
          <type><ref refid="interface_data_1_1_interfaces_1_1_i_booking_repository" kindref="compound">IBookingRepository</ref></type>
          <declname>bookingRepository</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="20" column="16" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="20" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1ad3ea7fb3bde95e10eaaa9108c87c76ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_events_response" kindref="compound">GetEventsResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventsResponse &gt; Service.Services.EventServiceImpl.GetAllEvents</definition>
        <argsstring>(Empty request, ServerCallContext context)</argsstring>
        <name>GetAllEvents</name>
        <qualifiedname>Service.Services.EventServiceImpl.GetAllEvents</qualifiedname>
        <param>
          <type>Empty</type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="26" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="26" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1a9ce98880416f10c0e50157a6523e7fbe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_event_response" kindref="compound">GetEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventResponse &gt; Service.Services.EventServiceImpl.CreateEvent</definition>
        <argsstring>(CreateEventRequest request, ServerCallContext context)</argsstring>
        <name>CreateEvent</name>
        <qualifiedname>Service.Services.EventServiceImpl.CreateEvent</qualifiedname>
        <param>
          <type><ref refid="class_create_event_request" kindref="compound">CreateEventRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="52" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="52" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1a89252691fabc52a2c6d45b82a0c82248" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_events_by_user_response" kindref="compound">GetEventsByUserResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventsByUserResponse &gt; Service.Services.EventServiceImpl.GetEventsByUser</definition>
        <argsstring>(GetRequest request, ServerCallContext context)</argsstring>
        <name>GetEventsByUser</name>
        <qualifiedname>Service.Services.EventServiceImpl.GetEventsByUser</qualifiedname>
        <param>
          <type><ref refid="class_get_request" kindref="compound">GetRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="89" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="89" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1aacd4ba7aedc0cc35cf41a182faca698b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_event_response" kindref="compound">GetEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventResponse &gt; Service.Services.EventServiceImpl.GetEvent</definition>
        <argsstring>(GetRequest request, ServerCallContext context)</argsstring>
        <name>GetEvent</name>
        <qualifiedname>Service.Services.EventServiceImpl.GetEvent</qualifiedname>
        <param>
          <type><ref refid="class_get_request" kindref="compound">GetRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="118" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="118" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1a2729c81f6b3db3380f0d393598786d6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_book_event_response" kindref="compound">BookEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; BookEventResponse &gt; Service.Services.EventServiceImpl.BookEvent</definition>
        <argsstring>(BookEventRequest request, ServerCallContext context)</argsstring>
        <name>BookEvent</name>
        <qualifiedname>Service.Services.EventServiceImpl.BookEvent</qualifiedname>
        <param>
          <type><ref refid="class_book_event_request" kindref="compound">BookEventRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="138" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="138" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1a934b03378d08421f30f2b764d43efce9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_event_response" kindref="compound">GetEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventResponse &gt; Service.Services.EventServiceImpl.AcceptEvent</definition>
        <argsstring>(GetRequest request, ServerCallContext context)</argsstring>
        <name>AcceptEvent</name>
        <qualifiedname>Service.Services.EventServiceImpl.AcceptEvent</qualifiedname>
        <param>
          <type><ref refid="class_get_request" kindref="compound">GetRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="160" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="160" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1a019a368c9df5d196c9941d9419dceaf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_event_response" kindref="compound">GetEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventResponse &gt; Service.Services.EventServiceImpl.RefuseEvent</definition>
        <argsstring>(GetRequest request, ServerCallContext context)</argsstring>
        <name>RefuseEvent</name>
        <qualifiedname>Service.Services.EventServiceImpl.RefuseEvent</qualifiedname>
        <param>
          <type><ref refid="class_get_request" kindref="compound">GetRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="181" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="181" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_service_1_1_services_1_1_event_service_impl_1ab4f1088230819e003c4a084df5b3e538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_get_event_response" kindref="compound">GetEventResponse</ref> &gt;</type>
        <definition>override async Task&lt; GetEventResponse &gt; Service.Services.EventServiceImpl.ReverseState</definition>
        <argsstring>(GetRequest request, ServerCallContext context)</argsstring>
        <name>ReverseState</name>
        <qualifiedname>Service.Services.EventServiceImpl.ReverseState</qualifiedname>
        <param>
          <type><ref refid="class_get_request" kindref="compound">GetRequest</ref></type>
          <declname>request</declname>
        </param>
        <param>
          <type>ServerCallContext</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Service/Services/EventServiceImpl.cs" line="202" column="36" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="202" bodyend="222"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>EventService::EventServiceBase</label>
        <link refid="class_event_service_1_1_event_service_base"/>
      </node>
      <node id="1">
        <label>Service.Services.EventServiceImpl</label>
        <link refid="class_service_1_1_services_1_1_event_service_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>EventService::EventServiceBase</label>
        <link refid="class_event_service_1_1_event_service_base"/>
      </node>
      <node id="1">
        <label>Service.Services.EventServiceImpl</label>
        <link refid="class_service_1_1_services_1_1_event_service_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Service/Services/EventServiceImpl.cs" line="15" column="11" bodyfile="Service/Services/EventServiceImpl.cs" bodystart="16" bodyend="223"/>
    <listofallmembers>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a80f796ce90bf41b445d0f7f93e3b1384" prot="private" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>_bookingRepository</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a54a5218d1d028a7f8b3caeeac2d9e514" prot="private" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>_eventRepository</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a5d8916fb6f2cb56226119c8f298c4c66" prot="private" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>_logger</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a934b03378d08421f30f2b764d43efce9" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>AcceptEvent</name></member>
      <member refid="class_event_service_1_1_event_service_base_1ab7187adce64f0ddb55a7cd87c21dfb38" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>AcceptEvent</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a2729c81f6b3db3380f0d393598786d6f" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>BookEvent</name></member>
      <member refid="class_event_service_1_1_event_service_base_1a438b9e7792746d6e722dd4989d1765d6" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>BookEvent</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a9ce98880416f10c0e50157a6523e7fbe" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>CreateEvent</name></member>
      <member refid="class_event_service_1_1_event_service_base_1ad2e015578a7d1057189ecc1137ff2cea" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>CreateEvent</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1afcf325584b268c2332c93596d77e4c7e" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>EventServiceImpl</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1ad3ea7fb3bde95e10eaaa9108c87c76ba" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>GetAllEvents</name></member>
      <member refid="class_event_service_1_1_event_service_base_1acbad882ee0ff2d0153b75312ffe6caea" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>GetAllEvents</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1aacd4ba7aedc0cc35cf41a182faca698b" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>GetEvent</name></member>
      <member refid="class_event_service_1_1_event_service_base_1a9b08193df54689323e796cd749d9f4c1" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>GetEvent</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a89252691fabc52a2c6d45b82a0c82248" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>GetEventsByUser</name></member>
      <member refid="class_event_service_1_1_event_service_base_1a38218fbe030a172d3b585a4af68d12f5" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>GetEventsByUser</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1a019a368c9df5d196c9941d9419dceaf7" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>RefuseEvent</name></member>
      <member refid="class_event_service_1_1_event_service_base_1a7a055f79cabb0639fd67358d1132eaf7" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>RefuseEvent</name></member>
      <member refid="class_service_1_1_services_1_1_event_service_impl_1ab4f1088230819e003c4a084df5b3e538" prot="public" virt="non-virtual"><scope>Service::Services::EventServiceImpl</scope><name>ReverseState</name></member>
      <member refid="class_event_service_1_1_event_service_base_1ab51bf3c62ae65a1db5e081537f869355" prot="public" virt="virtual" ambiguityscope="EventService::EventServiceBase."><scope>Service::Services::EventServiceImpl</scope><name>ReverseState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
