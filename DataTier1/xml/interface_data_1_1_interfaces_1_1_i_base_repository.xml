<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="interface_data_1_1_interfaces_1_1_i_base_repository" kind="interface" language="C#" prot="public">
    <compoundname>Data::Interfaces::IBaseRepository</compoundname>
    <derivedcompoundref refid="class_data_1_1_repositories_1_1_base_repository" prot="public" virt="non-virtual">Data.Repositories.BaseRepository&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1a85e24924e99f5db8adf3fd50af6a313b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task&lt; T &gt;</type>
        <definition>Task&lt; T &gt; Data.Interfaces.IBaseRepository&lt; T &gt;.CreateAsync</definition>
        <argsstring>(T entity)</argsstring>
        <name>CreateAsync</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.CreateAsync</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1a529b12e68e31441399bf2f8daa58158e">CreateAsync</reimplementedby>
        <param>
          <type>T</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="13" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1ab16643ed17b737b626033e7176a3b388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task Data.Interfaces.IBaseRepository&lt; T &gt;.DeleteAsync</definition>
        <argsstring>(Guid id)</argsstring>
        <name>DeleteAsync</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.DeleteAsync</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1a39c9d9172f264bd4fec32643daacbe45">DeleteAsync</reimplementedby>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="14" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1a6c29fb2e5f8219a39933aff1286c3ecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task&lt; ICollection&lt; T &gt; &gt;</type>
        <definition>Task&lt; ICollection&lt; T &gt; &gt; Data.Interfaces.IBaseRepository&lt; T &gt;.GetAll</definition>
        <argsstring>()</argsstring>
        <name>GetAll</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.GetAll</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1a6163b596f5c93a3610b47494d057b0f5">GetAll</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="15" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1ad989a3e8eda9ba1ef14c010a419d9faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task&lt; ICollection&lt; T &gt; &gt;</type>
        <definition>Task&lt; ICollection&lt; T &gt; &gt; Data.Interfaces.IBaseRepository&lt; T &gt;.GetAll</definition>
        <argsstring>(Expression&lt; Func&lt; T, bool &gt; &gt; filter)</argsstring>
        <name>GetAll</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.GetAll</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1a137eb609adafb59f49359239f676d086">GetAll</reimplementedby>
        <param>
          <type>Expression&lt; Func&lt; T, bool &gt; &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="16" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1a60647473d091c5836cbe58a08107a7fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task&lt; T &gt;</type>
        <definition>Task&lt; T &gt; Data.Interfaces.IBaseRepository&lt; T &gt;.GetByIdAsync</definition>
        <argsstring>(Guid id)</argsstring>
        <name>GetByIdAsync</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.GetByIdAsync</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4">GetByIdAsync</reimplementedby>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="17" column="14"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1a81187241a4c2c057f67a615ef40531c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ValueTask&lt; ICollection&lt; T &gt; &gt;</type>
        <definition>ValueTask&lt; ICollection&lt; T &gt; &gt; Data.Interfaces.IBaseRepository&lt; T &gt;.GetByAsync</definition>
        <argsstring>(Expression&lt; Func&lt; T, bool &gt; &gt; filter)</argsstring>
        <name>GetByAsync</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.GetByAsync</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1a92e9970e8293796850deebf79e72c7c2">GetByAsync</reimplementedby>
        <param>
          <type>Expression&lt; Func&lt; T, bool &gt; &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="18" column="19"/>
      </memberdef>
      <memberdef kind="function" id="interface_data_1_1_interfaces_1_1_i_base_repository_1abf9aab7d66e0d533c9def315bb2a22a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>Task</type>
        <definition>Task Data.Interfaces.IBaseRepository&lt; T &gt;.UpdateAsync</definition>
        <argsstring>(T entity)</argsstring>
        <name>UpdateAsync</name>
        <qualifiedname>Data.Interfaces.IBaseRepository.UpdateAsync</qualifiedname>
        <reimplementedby refid="class_data_1_1_repositories_1_1_base_repository_1ad41095e76cfadfb0188c984ca2c22554">UpdateAsync</reimplementedby>
        <param>
          <type>T</type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Interfaces/IBaseRepository.cs" line="19" column="14"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>Data.Interfaces.IBaseRepository&lt; T &gt;</label>
        <link refid="interface_data_1_1_interfaces_1_1_i_base_repository"/>
      </node>
      <node id="2">
        <label>Data.Repositories.BaseRepository&lt; T &gt;</label>
        <link refid="class_data_1_1_repositories_1_1_base_repository"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="Data/Interfaces/IBaseRepository.cs" line="11" column="22" bodyfile="Data/Interfaces/IBaseRepository.cs" bodystart="12" bodyend="20"/>
    <listofallmembers>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a85e24924e99f5db8adf3fd50af6a313b" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>CreateAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1ab16643ed17b737b626033e7176a3b388" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>DeleteAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a6c29fb2e5f8219a39933aff1286c3ecb" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>GetAll</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1ad989a3e8eda9ba1ef14c010a419d9faf" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>GetAll</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a81187241a4c2c057f67a615ef40531c6" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>GetByAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a60647473d091c5836cbe58a08107a7fd" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>GetByIdAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1abf9aab7d66e0d533c9def315bb2a22a8" prot="public" virt="non-virtual"><scope>Data::Interfaces::IBaseRepository</scope><name>UpdateAsync</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
