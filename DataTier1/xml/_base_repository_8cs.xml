<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="_base_repository_8cs" kind="file" language="C#">
    <compoundname>BaseRepository.cs</compoundname>
    <innerclass refid="class_data_1_1_repositories_1_1_base_repository" prot="public">Data::Repositories::BaseRepository</innerclass>
    <innernamespace refid="namespace_data">Data</innernamespace>
    <innernamespace refid="namespace_data_1_1_repositories">Data::Repositories</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Text;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Microsoft.EntityFrameworkCore;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Linq.Expressions;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">System.Threading.Tasks;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_data_1_1_interfaces" kindref="compound">Data.Interfaces</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_data_1_1_models" kindref="compound">Data.Models</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_data_1_1_repositories" kindref="compound">Data.Repositories</ref></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13" refid="class_data_1_1_repositories_1_1_base_repository" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_data_1_1_repositories_1_1_base_repository" kindref="compound">BaseRepository</ref>&lt;T&gt;<sp/>:<sp/><ref refid="interface_data_1_1_interfaces_1_1_i_base_repository" kindref="compound">IBaseRepository</ref>&lt;T&gt;<sp/>where<sp/>T<sp/>:<sp/><ref refid="class_data_1_1_models_1_1_base_entity" kindref="compound">BaseEntity</ref></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="15" refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="class_data_1_1_d_b_context" kindref="compound">DBContext</ref><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="class_data_1_1_repositories_1_1_base_repository_1a397a1e4ebe236fa8166ed8360392e174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a397a1e4ebe236fa8166ed8360392e174" kindref="member">BaseRepository</ref>(<ref refid="class_data_1_1_d_b_context" kindref="compound">DBContext</ref><sp/>context)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref><sp/>=<sp/>context;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_data_1_1_repositories_1_1_base_repository_1a6163b596f5c93a3610b47494d057b0f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;ICollection&lt;T&gt;&gt;<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a6163b596f5c93a3610b47494d057b0f5" kindref="member">GetAll</ref>()</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Set&lt;T&gt;().ToListAsync();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_data_1_1_repositories_1_1_base_repository_1a137eb609adafb59f49359239f676d086" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;ICollection&lt;T&gt;&gt;<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a137eb609adafb59f49359239f676d086" kindref="member">GetAll</ref>(Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>filter)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Set&lt;T&gt;().Where(filter).ToListAsync();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31" refid="class_data_1_1_repositories_1_1_base_repository_1a92e9970e8293796850deebf79e72c7c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>ValueTask&lt;ICollection&lt;T&gt;&gt;<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a92e9970e8293796850deebf79e72c7c2" kindref="member">GetByAsync</ref>(Expression&lt;Func&lt;T,<sp/>bool&gt;&gt;<sp/>filter)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Set&lt;T&gt;().Where(filter).ToListAsync();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35" refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;T&gt;<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4" kindref="member">GetByIdAsync</ref>(Guid<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Set&lt;T&gt;().FindAsync(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_data_1_1_repositories_1_1_base_repository_1a529b12e68e31441399bf2f8daa58158e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;T&gt;<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a529b12e68e31441399bf2f8daa58158e" kindref="member">CreateAsync</ref>(T<sp/>entity)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Set&lt;T&gt;().Add(entity);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.SaveChangesAsync();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>entity;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_data_1_1_repositories_1_1_base_repository_1ad41095e76cfadfb0188c984ca2c22554" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1ad41095e76cfadfb0188c984ca2c22554" kindref="member">UpdateAsync</ref>(T<sp/>entity)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dbEntity<sp/>=<sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4" kindref="member">GetByIdAsync</ref>(entity.Id);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dbEntity<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentException();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Entry(dbEntity).CurrentValues.SetValues(entity);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.SaveChangesAsync();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_data_1_1_repositories_1_1_base_repository_1a39c9d9172f264bd4fec32643daacbe45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>async<sp/>Task<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a39c9d9172f264bd4fec32643daacbe45" kindref="member">DeleteAsync</ref>(Guid<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>entity<sp/>=<sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4" kindref="member">GetByIdAsync</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(entity<sp/>==<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentException();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.Remove(entity);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/><ref refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" kindref="member">_context</ref>.SaveChangesAsync();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Data/Repositories/BaseRepository.cs"/>
  </compounddef>
</doxygen>
