<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_data_1_1_repositories_1_1_event_repository" kind="class" language="C#" prot="public">
    <compoundname>Data::Repositories::EventRepository</compoundname>
    <basecompoundref refid="class_data_1_1_repositories_1_1_base_repository" prot="public" virt="non-virtual">Data.Repositories.BaseRepository&lt; Event &gt;</basecompoundref>
    <basecompoundref refid="interface_data_1_1_interfaces_1_1_i_event_repository" prot="public" virt="non-virtual">Data.Interfaces.IEventRepository</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a226b9256e908297d794f6685240d1965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Data.Repositories.EventRepository.EventRepository</definition>
        <argsstring>(DBContext context)</argsstring>
        <name>EventRepository</name>
        <qualifiedname>Data.Repositories.EventRepository.EventRepository</qualifiedname>
        <param>
          <type><ref refid="class_data_1_1_d_b_context" kindref="compound">DBContext</ref></type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="16" column="16" bodyfile="Data/Repositories/EventRepository.cs" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a2f9f677ca46b99f3802b606f07d9ac04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override async Task&lt; ICollection&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt; &gt;</type>
        <definition>override async Task&lt; ICollection&lt; Event &gt; &gt; Data.Repositories.EventRepository.GetAll</definition>
        <argsstring>()</argsstring>
        <name>GetAll</name>
        <qualifiedname>Data.Repositories.EventRepository.GetAll</qualifiedname>
        <reimplements refid="class_data_1_1_repositories_1_1_base_repository_1a6163b596f5c93a3610b47494d057b0f5">GetAll</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="19" column="36" bodyfile="Data/Repositories/EventRepository.cs" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1ac112c3a5306b6a0886d69d8b1a82eace" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; ICollection&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt; &gt;</type>
        <definition>override async Task&lt; ICollection&lt; Event &gt; &gt; Data.Repositories.EventRepository.GetAll</definition>
        <argsstring>(Expression&lt; Func&lt; Event, bool &gt; &gt; filter)</argsstring>
        <name>GetAll</name>
        <qualifiedname>Data.Repositories.EventRepository.GetAll</qualifiedname>
        <param>
          <type>Expression&lt; Func&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref>, bool &gt; &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="23" column="36" bodyfile="Data/Repositories/EventRepository.cs" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1ac3b3230675b79b7b6110c2c8079ca723" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async ValueTask&lt; ICollection&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt; &gt;</type>
        <definition>override async ValueTask&lt; ICollection&lt; Event &gt; &gt; Data.Repositories.EventRepository.GetByAsync</definition>
        <argsstring>(Expression&lt; Func&lt; Event, bool &gt; &gt; filter)</argsstring>
        <name>GetByAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.GetByAsync</qualifiedname>
        <param>
          <type>Expression&lt; Func&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref>, bool &gt; &gt;</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="27" column="41" bodyfile="Data/Repositories/EventRepository.cs" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1aab781162b7534701dd82d3f2071f9a3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>override async Task&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>override async Task&lt; Event &gt; Data.Repositories.EventRepository.GetByIdAsync</definition>
        <argsstring>(Guid id)</argsstring>
        <name>GetByIdAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.GetByIdAsync</qualifiedname>
        <reimplements refid="class_data_1_1_repositories_1_1_base_repository_1ac2cfe1daf966fec44f41c884943e13c4">GetByIdAsync</reimplements>
        <param>
          <type>Guid</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="31" column="36" bodyfile="Data/Repositories/EventRepository.cs" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a5c6aef71f356302fc2a4a8c75de6909f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task</type>
        <definition>override async Task Data.Repositories.EventRepository.UpdateAsync</definition>
        <argsstring>(Event entity)</argsstring>
        <name>UpdateAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.UpdateAsync</qualifiedname>
        <param>
          <type><ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref></type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="35" column="36" bodyfile="Data/Repositories/EventRepository.cs" bodystart="35" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a3d5ac8653cfe4663b5d3f2eee7257bf6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>override async Task&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>override async Task&lt; Event &gt; Data.Repositories.EventRepository.CreateAsync</definition>
        <argsstring>(Event entity)</argsstring>
        <name>CreateAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.CreateAsync</qualifiedname>
        <param>
          <type><ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref></type>
          <declname>entity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="55" column="36" bodyfile="Data/Repositories/EventRepository.cs" bodystart="55" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a94cd22580a8d817ee959d78ddfe10404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>async Task&lt; Event &gt; Data.Repositories.EventRepository.AcceptEventAsync</definition>
        <argsstring>(Event @event)</argsstring>
        <name>AcceptEventAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.AcceptEventAsync</qualifiedname>
        <reimplements refid="interface_data_1_1_interfaces_1_1_i_event_repository_1ae14c8867e9ad924be743a4a7a9c4e2ab">AcceptEventAsync</reimplements>
        <param>
          <type><ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> @</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="74" column="27" bodyfile="Data/Repositories/EventRepository.cs" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a83fbb08edb080ce7061a6576a85ec126" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>async Task&lt; Event &gt; Data.Repositories.EventRepository.RefuseEventAsync</definition>
        <argsstring>(Event @event)</argsstring>
        <name>RefuseEventAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.RefuseEventAsync</qualifiedname>
        <reimplements refid="interface_data_1_1_interfaces_1_1_i_event_repository_1a8d6a98498b5bdd48d22bb6d0a12520fd">RefuseEventAsync</reimplements>
        <param>
          <type><ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> @</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="82" column="27" bodyfile="Data/Repositories/EventRepository.cs" bodystart="82" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_data_1_1_repositories_1_1_event_repository_1a4f1c1f62c46ee2e4bbc926a6973aff26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>async Task&lt; <ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> &gt;</type>
        <definition>async Task&lt; Event &gt; Data.Repositories.EventRepository.RevertStateAsync</definition>
        <argsstring>(Event @event)</argsstring>
        <name>RevertStateAsync</name>
        <qualifiedname>Data.Repositories.EventRepository.RevertStateAsync</qualifiedname>
        <reimplements refid="interface_data_1_1_interfaces_1_1_i_event_repository_1ad95e7830cd6f2e79d62d4f3176e9e7b4">RevertStateAsync</reimplements>
        <param>
          <type><ref refid="class_data_1_1_models_1_1_event" kindref="compound">Event</ref> @</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Data/Repositories/EventRepository.cs" line="92" column="27" bodyfile="Data/Repositories/EventRepository.cs" bodystart="92" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BaseRepository&lt; Event &gt;</label>
        <link refid="class_data_1_1_repositories_1_1_base_repository"/>
      </node>
      <node id="1">
        <label>Data.Repositories.EventRepository</label>
        <link refid="class_data_1_1_repositories_1_1_event_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>IBaseRepository&lt; Event &gt;</label>
        <link refid="interface_data_1_1_interfaces_1_1_i_base_repository"/>
      </node>
      <node id="3">
        <label>IEventRepository</label>
        <link refid="interface_data_1_1_interfaces_1_1_i_event_repository"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BaseRepository&lt; Event &gt;</label>
        <link refid="class_data_1_1_repositories_1_1_base_repository"/>
      </node>
      <node id="1">
        <label>Data.Repositories.EventRepository</label>
        <link refid="class_data_1_1_repositories_1_1_event_repository"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>IBaseRepository&lt; Event &gt;</label>
        <link refid="interface_data_1_1_interfaces_1_1_i_base_repository"/>
      </node>
      <node id="3">
        <label>IEventRepository</label>
        <link refid="interface_data_1_1_interfaces_1_1_i_event_repository"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Data/Repositories/EventRepository.cs" line="14" column="11" bodyfile="Data/Repositories/EventRepository.cs" bodystart="15" bodyend="99"/>
    <listofallmembers>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a8a7ec909e7e6829b67f85aadcf2e4df1" prot="protected" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>_context</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a94cd22580a8d817ee959d78ddfe10404" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>AcceptEventAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a397a1e4ebe236fa8166ed8360392e174" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>BaseRepository</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a3d5ac8653cfe4663b5d3f2eee7257bf6" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>CreateAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a529b12e68e31441399bf2f8daa58158e" prot="public" virt="virtual" ambiguityscope="BaseRepository&lt; Event &gt;."><scope>Data::Repositories::EventRepository</scope><name>CreateAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a85e24924e99f5db8adf3fd50af6a313b" prot="public" virt="non-virtual" ambiguityscope="Data::Interfaces::IEventRepository."><scope>Data::Repositories::EventRepository</scope><name>CreateAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a39c9d9172f264bd4fec32643daacbe45" prot="public" virt="virtual" ambiguityscope="BaseRepository&lt; Event &gt;."><scope>Data::Repositories::EventRepository</scope><name>DeleteAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1ab16643ed17b737b626033e7176a3b388" prot="public" virt="non-virtual" ambiguityscope="Data::Interfaces::IEventRepository."><scope>Data::Repositories::EventRepository</scope><name>DeleteAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a226b9256e908297d794f6685240d1965" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>EventRepository</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a2f9f677ca46b99f3802b606f07d9ac04" prot="public" virt="virtual"><scope>Data::Repositories::EventRepository</scope><name>GetAll</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1ac112c3a5306b6a0886d69d8b1a82eace" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>GetAll</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a137eb609adafb59f49359239f676d086" prot="public" virt="virtual" ambiguityscope="BaseRepository&lt; Event &gt;."><scope>Data::Repositories::EventRepository</scope><name>GetAll</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1ad989a3e8eda9ba1ef14c010a419d9faf" prot="public" virt="non-virtual" ambiguityscope="Data::Interfaces::IEventRepository."><scope>Data::Repositories::EventRepository</scope><name>GetAll</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1ac3b3230675b79b7b6110c2c8079ca723" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>GetByAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1a92e9970e8293796850deebf79e72c7c2" prot="public" virt="virtual" ambiguityscope="BaseRepository&lt; Event &gt;."><scope>Data::Repositories::EventRepository</scope><name>GetByAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1a81187241a4c2c057f67a615ef40531c6" prot="public" virt="non-virtual" ambiguityscope="Data::Interfaces::IEventRepository."><scope>Data::Repositories::EventRepository</scope><name>GetByAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1aab781162b7534701dd82d3f2071f9a3f" prot="public" virt="virtual"><scope>Data::Repositories::EventRepository</scope><name>GetByIdAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a83fbb08edb080ce7061a6576a85ec126" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>RefuseEventAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a4f1c1f62c46ee2e4bbc926a6973aff26" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>RevertStateAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_event_repository_1a5c6aef71f356302fc2a4a8c75de6909f" prot="public" virt="non-virtual"><scope>Data::Repositories::EventRepository</scope><name>UpdateAsync</name></member>
      <member refid="class_data_1_1_repositories_1_1_base_repository_1ad41095e76cfadfb0188c984ca2c22554" prot="public" virt="virtual" ambiguityscope="BaseRepository&lt; Event &gt;."><scope>Data::Repositories::EventRepository</scope><name>UpdateAsync</name></member>
      <member refid="interface_data_1_1_interfaces_1_1_i_base_repository_1abf9aab7d66e0d533c9def315bb2a22a8" prot="public" virt="non-virtual" ambiguityscope="Data::Interfaces::IEventRepository."><scope>Data::Repositories::EventRepository</scope><name>UpdateAsync</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
